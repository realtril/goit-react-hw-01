{"version":3,"sources":["Components/FriendsList/FriendList.module.css","Components/Profile/Profile.js","Components/StatItem/StatItemStyled.js","Components/StatItem/StatItem.js","Components/StatList/StatListStyled.js","Components/StatList/StatList.js","Components/Friend/Friend.js","Components/FriendsList/FriendList.js","Components/TransItem/TransItem.js","Components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","name","avatar","location","tag","stats","className","src","alt","followers","views","likes","Item","styled","li","Math","random","toString","substring","toUpperCase","Label","span","Percentage","StatItem","percentage","label","List","ul","Title","h2","StatList","title","statsDb","map","item","key","id","defaultProps","Friend","isOnline","styles","friend","online","offline","status","width","FriendList","friends","TransItem","type","amount","currency","console","log","transactions","TransactionHistory","data","user","App","Date","items","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.efcb8da3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend-list\":\"FriendList_friend-list__2V1_c\",\"friend\":\"FriendList_friend__3bJgu\",\"avatar\":\"FriendList_avatar__3O2Z-\",\"online\":\"FriendList_online__o0-MN\",\"offline\":\"FriendList_offline__1y1Iv\",\"name\":\"FriendList_name__fuw9N\"};","import React from \"react\";\nimport \"./Profile.css\";\n\nconst Profile = ({ name, avatar, location, tag, stats }) => {\n  return (\n    <div className=\"profile\">\n      <div className=\"description\">\n        <img src={avatar} alt=\"user avatar\" className=\"avatar\" />\n        <p className=\"name\">{name}</p>\n        <p className=\"tag\">{tag}</p>\n        <p className=\"location\">{location}</p>\n      </div>\n      <ul className=\"stats\">\n        <li>\n          <span className=\"label\">Followers</span>\n          <br />\n          <span className=\"quantity\">{stats.followers}</span>\n        </li>\n        <li>\n          <span className=\"label\">Views</span>\n          <br />\n          <span className=\"quantity\">{stats.views}</span>\n        </li>\n        <li>\n          <span className=\"label\">Likes</span>\n          <br />\n          <span className=\"quantity\">{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Profile;\n","import styled from \"styled-components\";\nexport const Item = styled.li`\n  width: 100px;\n  background-color: ${() =>\n    \"#\" +\n    (Math.random().toString(16) + \"000000\").substring(2, 8).toUpperCase()};\n  text-align: center;\n`;\nexport const Label = styled.span`\n  padding: 10 px 0 0 0;\n  display: block;\n  font-size: 12px;\n`;\nexport const Percentage = styled.span`\n  padding: 20px 0;\n  display: block;\n  font-size: 18px;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Item, Label, Percentage } from \"./StatItemStyled\";\nconst StatItem = ({ percentage, label }) => {\n  return (\n    <Item>\n      <Label> {label} </Label>\n      <Percentage> {percentage} % </Percentage>\n    </Item>\n  );\n};\n\nexport default StatItem;\nStatItem.propTypes = {\n  percentage: PropTypes.number.isRequired,\n  label: PropTypes.string.isRequired,\n};\n","import styled from \"styled-components\";\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  list-style: none;\n  font-family: \"ProximaNova\";\n`;\nexport const Title = styled.h2`\n  width: 500px;\n  margin: 0 auto;\n  background-color: #fff;\n  padding: 40px 0;\n  text-transform: uppercase;\n  text-align: center;\n  font-family: \"ProximaNova\";\n`;\n","import React from \"react\";\nimport StatItem from \"../StatItem/StatItem\";\nimport statsDb from \"../../db/statistical-data.json\";\nimport { Title, List } from \"./StatListStyled\";\nconst StatList = ({ title }) => {\n  return (\n    <>\n      <Title> {title}</Title>\n      <List>\n        {statsDb.map((item) => {\n          return (\n            <StatItem\n              key={item.id}\n              label={item.label}\n              percentage={item.percentage}\n            />\n          );\n        })}\n      </List>\n    </>\n  );\n};\nStatList.defaultProps = {\n  title: \"Upload stats\",\n};\nexport default StatList;\n","import React from \"react\";\nimport styles from \"../FriendsList/FriendList.module.css\";\n\nconst Friend = ({ avatar, name, isOnline }) => {\n  return (\n    <li className={styles.friend}>\n      <span\n        className={`${\"status\"} ${isOnline ? styles.online : styles.offline}`}\n      >\n        ....\n      </span>\n      <span className={styles.status}>{isOnline}</span>\n      <img className={styles.avatar} src={avatar} alt=\"\" width=\"48\" />\n      <p className={styles.name}>{name}</p>\n    </li>\n  );\n};\n\nexport default Friend;\n","import React from \"react\";\nimport Friend from \"../Friend/Friend\";\nimport friends from \"../../db/friends.json\";\nimport styles from \"./FriendList.module.css\";\n\nconst FriendList = () => {\n  return (\n    <ul className={styles[\"friend-list\"]}>\n      {friends.map((friend) => (\n        <Friend\n          key={friend.id}\n          avatar={friend.avatar}\n          name={friend.name}\n          isOnline={friend.isOnline}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default FriendList;\n","import React from \"react\";\n\nconst TransItem = ({ type, amount, currency }) => {\n  return (\n    <tr>\n      <td>{type}</td>\n      <td>{amount}</td>\n      <td>{currency}</td>\n    </tr>\n  );\n};\n\nexport default TransItem;\n","import React from \"react\";\nimport TransItem from \"../TransItem/TransItem\";\nimport transactions from \"../../db/transactions.json\";\nconsole.log(transactions);\n\nconst TransactionHistory = () => {\n  return (\n    <table className=\"transaction-history\">\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {transactions.map((item) => (\n          <TransItem\n            key={item.id}\n            type={item.type}\n            amount={item.amount}\n            currency={item.currency}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default TransactionHistory;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport Profile from \"./Components/Profile/Profile\";\nimport StatList from \"./Components/StatList/StatList\";\nimport FriendList from \"./Components/FriendsList/FriendList\";\nimport TransactionHistory from \"./Components/TransactionHistory/TransactionHistory\";\nimport user from \"./db/user.json\";\nimport friends from \"./db/friends.json\";\nimport transactions from \"./db/transactions.json\";\nconst data = [{ ...user }];\nconsole.log(data);\n\nfunction App() {\n  return (\n    <>\n      {data.map((user) => (\n        <Profile\n          key={user.name + new Date()}\n          name={user.name}\n          tag={user.tag}\n          location={user.location}\n          avatar={user.avatar}\n          stats={user.stats}\n        />\n      ))}\n      <StatList />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />,\n    </>\n  );\n}\nexport default App;\n\nApp.propTypes = {\n  data: PropTypes.arrayOf({\n    name: PropTypes.string,\n    location: PropTypes.string,\n    stats: PropTypes.array,\n    tag: PropTypes.string,\n    avatar: PropTypes.string,\n    img: PropTypes.string,\n  }),\n  title: PropTypes.string.isRequired,\n  stats: PropTypes.array,\n  friends: PropTypes.array,\n  transactions: PropTypes.array,\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.js\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}